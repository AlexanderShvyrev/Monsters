{"version":3,"sources":["components/SearchBox/SearchBox.js","components/Card/Card.js","components/Card-List/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","input","setInput","placeholder","className","type","value","onChange","e","target","Card","monster","src","id","alt","username","email","CardList","monsters","loading","map","style","color","App","useState","setMonsters","setLoading","useEffect","axios","get","then","res","setTimeout","data","catch","err","console","log","filteredMonsters","filter","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAYeA,EATG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAElC,OACI,qBAAKC,UAAU,mBAAf,SACI,uBAAOA,UAAU,SAASC,KAAK,SAASC,MAAOL,EAAOE,YAAaA,EAAaI,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOH,aCK9GI,G,MAVF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACZ,OACI,sBAAKP,UAAU,OAAf,UACI,qBAAKQ,IAAG,+BAA0BD,EAAQE,GAAlC,aAAiDC,IAAI,YAC7D,6BAAKH,EAAQI,WACb,4BAAIJ,EAAQK,aCSTC,G,MAZE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1B,OACI,qBAAKf,UAAU,kBAAf,SACMe,EAAUD,EAASE,KAAI,SAAAT,GACrB,OACI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQE,OAEtB,oBAAIQ,MAAO,CAAEC,MAAO,SAApB,4B,MC0BFC,MA/Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNN,EADM,KACIO,EADJ,OAEiBD,oBAAS,GAF1B,mBAENL,EAFM,KAEGO,EAFH,OAGaF,mBAAS,IAHtB,mBAGNvB,EAHM,KAGCC,EAHD,KAMbyB,qBAAU,WACRC,IAAMC,IAAI,8CACPC,MAAK,SAAAC,GACJC,YAAW,WACTN,GAAW,KACV,KACHD,EAAYM,EAAIE,SAEjBH,KAAKJ,GAAW,IAChBQ,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAGH,IAAMG,EAAmBpB,EAASqB,QAAO,SAAA5B,GAAO,OAAIA,EAAQI,SAASyB,cAAcC,SAASxC,EAAMuC,kBAGlG,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWH,MAAOA,EAAOC,SAAUA,EAAUC,YAAY,uBACzD,cAAC,EAAD,CAAUe,SAAUoB,EAAkBnB,QAASA,QCpBtCuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac16fc83.chunk.js","sourcesContent":["\nimport './searchBox.css'\n\nconst SearchBox = ({ input, setInput, placeholder }) => {\n\n    return (\n        <div className=\"search-container\">\n            <input className=\"search\" type=\"search\" value={input} placeholder={placeholder} onChange={e => setInput(e.target.value)} />\n        </div>\n    )\n}\n\nexport default SearchBox\n","import './card.css'\n\nconst Card = ({ monster }) => {\n    return (\n        <div className=\"card\">\n            <img src={`https://robohash.org/${monster.id}?set=set2`} alt=\"monster\" />\n            <h1>{monster.username}</h1>\n            <p>{monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card\n","import Card from '../Card/Card'\nimport './card-list.css'\n\n\nconst CardList = ({ monsters, loading }) => {\n    return (\n        <div className=\"cards-container\">\n            { loading ? monsters.map(monster => {\n                return (\n                    <Card key={monster.id} monster={monster} />\n                )\n            }) : <h2 style={{ color: 'white' }}>Loading...</h2>}\n        </div>\n    )\n}\n\nexport default CardList\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport SearchBox from './components/SearchBox/SearchBox'\nimport CardList from './components/Card-List/CardList'\nimport './App.css'\n\nfunction App() {\n  const [monsters, setMonsters] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [input, setInput] = useState('')\n\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then(res => {\n        setTimeout(() => {\n          setLoading(true)\n        }, 2000)\n        setMonsters(res.data)\n      })\n      .then(setLoading(false))\n      .catch(err => console.log(err))\n  }, [])\n\n  //filter monsters\n  const filteredMonsters = monsters.filter(monster => monster.username.toLowerCase().includes(input.toLowerCase()))\n\n\n  return (\n    <div className=\"App\">\n      <h2>Monsters Rolodex</h2>\n      <SearchBox input={input} setInput={setInput} placeholder=\"Search monsters...\" />\n      <CardList monsters={filteredMonsters} loading={loading} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}